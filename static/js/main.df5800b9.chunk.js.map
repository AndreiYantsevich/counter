{"version":3,"sources":["components/Counter/Counter.module.css","components/Settings/Settings.module.css","components/Input/Input.module.css","App.module.css","components/Button/Button.module.css","components/Input/Input.tsx","components/Button/Button.tsx","store/count-reducer.ts","components/Settings/Settings.tsx","components/Counter/Counter.tsx","App.tsx","store/store.ts","utils/localstorage.ts","index.tsx"],"names":["module","exports","Input","props","className","error","style","errorInput","superInput","type","value","onChange","e","setValue","currentTarget","valueAsNumber","Button","item","onClick","disabled","title","SET_MAX_VALUE","SET_MIN_VALUE","SET_ERROR","SET_VALUE","SET_INCREMENT","RESET_VALUE","DISABLED_BUTTON","initialState","maxValue","minValue","setErrorAC","payload","disabledButtonAC","Settings","dispatch","useDispatch","settings","input_container","description","setMaxValueAC","setMinValueAC","button_container","Counter","disabledIncBtn","disabledResetBtn","counter","monitor","errorCount","count","App","useSelector","state","app","reducers","combineReducers","action","newValue","resetValue","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df5800b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3KyHP\",\"monitor\":\"Counter_monitor__30l0x\",\"count\":\"Counter_count__1DILa\",\"errorCount\":\"Counter_errorCount__3SMsF\",\"button_container\":\"Counter_button_container__2-Pvf\",\"error\":\"Counter_error__31M2I\",\"description\":\"Counter_description__3laqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1lmsk\",\"input_container\":\"Settings_input_container__-Lg7H\",\"item\":\"Settings_item__2AZj4\",\"button_container\":\"Settings_button_container__3HGGu\",\"description\":\"Settings_description__13tx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__A6nYi\",\"errorInput\":\"Input_errorInput__1pR7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__182Zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Button_item__2e1L-\"};","import React, {ChangeEvent} from 'react';\r\nimport style from './Input.module.css'\r\n\r\ntype PropsType = {\r\n    value: number\r\n    setValue: (value: number) => void\r\n    error: boolean\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = (props) => {\r\n\r\n    const setValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setValue(e.currentTarget.valueAsNumber)\r\n    }\r\n    const className = props.error ? style.errorInput : style.superInput\r\n\r\n    return (\r\n        <div>\r\n            <input type={'number'}\r\n                   value={props.value}\r\n                   onChange={setValue}\r\n                   className={className}\r\n            />\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\ntype PropsType = {\r\n    title: string,\r\n    onClick?: () => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <button onClick={props.onClick}\r\n                    disabled={props.disabled}>{props.title}</button>\r\n        </div>\r\n    )\r\n};","const SET_MAX_VALUE = 'SET_MAX_VALUE';\r\nconst SET_MIN_VALUE = 'SET_MIN_VALUE';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_VALUE = 'SET_VALUE';\r\nconst SET_INCREMENT = 'SET_INCREMENT';\r\nconst RESET_VALUE = 'RESET_VALUE';\r\nconst DISABLED_BUTTON = 'DISABLED_BUTTON';\r\n\r\ntype SetMaxValueAction = {\r\n    type: 'SET_MAX_VALUE';\r\n    payload: { maxValue: number; }\r\n}\r\n\r\ntype SetMinValueAction = {\r\n    type: 'SET_MIN_VALUE';\r\n    payload: { minValue: number; }\r\n}\r\n\r\ntype SetErrorAction = {\r\n    type: 'SET_ERROR';\r\n    payload: { error: boolean; }\r\n}\r\n\r\ntype SetValueAction = {\r\n    type: 'SET_VALUE';\r\n    payload: { value: number; }\r\n}\r\n\r\ntype SetIncrementAction = {\r\n    type: 'SET_INCREMENT';\r\n}\r\n\r\ntype ResetValueAction = {\r\n    type: 'RESET_VALUE';\r\n}\r\n\r\ntype DisabledButtonAction = {\r\n    type: 'DISABLED_BUTTON';\r\n    payload: { disabled: boolean; }\r\n}\r\n\r\ntype ActionType =\r\n    SetMaxValueAction |\r\n    SetMinValueAction |\r\n    SetErrorAction |\r\n    SetValueAction |\r\n    SetIncrementAction |\r\n    ResetValueAction |\r\n    DisabledButtonAction\r\n\r\nconst initialState = {\r\n    maxValue: 0,\r\n    minValue: 0,\r\n    value: null as null | number,\r\n    error: false,\r\n    disabled: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport default function countReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\r\n    switch (action.type) {\r\n        case SET_MAX_VALUE:\r\n            return {...state, maxValue: action.payload.maxValue}\r\n        case SET_MIN_VALUE:\r\n            return {...state, minValue: action.payload.minValue}\r\n        case SET_ERROR:\r\n            return {...state, error: action.payload.error}\r\n        case SET_VALUE:\r\n            return {...state, value: action.payload.value}\r\n        case SET_INCREMENT:\r\n            let newValue = state.value\r\n            if (newValue != null && newValue < state.maxValue) {\r\n                newValue += 1\r\n            }\r\n            return {...state, value: newValue}\r\n        case RESET_VALUE:\r\n            const resetValue = state.minValue\r\n            return {...state, value: resetValue}\r\n        case DISABLED_BUTTON:\r\n            return {...state, disabled: action.payload.disabled}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setMaxValueAC = (maxValue: number): SetMaxValueAction => ({type: SET_MAX_VALUE, payload: {maxValue}})\r\nexport const setMinValueAC = (minValue: number): SetMinValueAction => ({type: SET_MIN_VALUE, payload: {minValue}})\r\nexport const setErrorAC = (error: boolean): SetErrorAction => ({type: SET_ERROR, payload: {error}})\r\nexport const setValueAC = (value: number): SetValueAction => ({type: SET_VALUE, payload: {value}})\r\nexport const setIncrementAC = (): SetIncrementAction => ({type: SET_INCREMENT})\r\nexport const resetValueAC = (): ResetValueAction => ({type: RESET_VALUE})\r\nexport const disabledButtonAC = (disabled: boolean): DisabledButtonAction => ({\r\n    type: DISABLED_BUTTON,\r\n    payload: {disabled}\r\n})\r\n","import React from 'react';\r\nimport style from './Settings.module.css'\r\nimport {Input} from '../Input/Input';\r\nimport {Button} from '../Button/Button';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    disabledButtonAC,\r\n    setErrorAC,\r\n    setMaxValueAC,\r\n    setMinValueAC,\r\n    setValueAC\r\n} from '../../store/count-reducer';\r\n\r\ntype PropsType = {\r\n    value: number | null\r\n    minValue: number\r\n    maxValue: number\r\n    error: boolean\r\n    disabled: boolean\r\n}\r\n\r\nexport const Settings: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMaxValue = (maxValue: number) => {\r\n        dispatch(setMaxValueAC(maxValue))\r\n        dispatch(disabledButtonAC(true))\r\n    }\r\n\r\n    const setMinValue = (minValue: number) => {\r\n        dispatch(setMinValueAC(minValue))\r\n        dispatch(disabledButtonAC(true))\r\n    }\r\n\r\n    const setValue = () => {\r\n        dispatch(setValueAC(props.minValue))\r\n        dispatch(disabledButtonAC(false))\r\n    }\r\n\r\n    if (props.maxValue <= props.minValue || props.minValue < 0) {\r\n        dispatch(setErrorAC(true))\r\n    } else {\r\n        dispatch(setErrorAC(false))\r\n    }\r\n\r\n    return (\r\n        <div className={style.settings}>\r\n            <div className={style.input_container}>\r\n                <div className={style.item}>\r\n                    <div className={style.description}>Max value:</div>\r\n                    <div>\r\n                        <Input value={props.maxValue} setValue={setMaxValue}\r\n                               error={props.error}/>\r\n                    </div>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <div className={style.description}>Min value:</div>\r\n                    <div>\r\n                        <Input value={props.minValue} setValue={setMinValue}\r\n                               error={props.error}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.button_container}>\r\n                <Button title={'Set'} onClick={setValue}\r\n                        disabled={!props.disabled || props.error}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport style from './Counter.module.css'\r\nimport {useDispatch} from 'react-redux';\r\nimport {Button} from '../Button/Button';\r\nimport {resetValueAC, setIncrementAC} from '../../store/count-reducer';\r\n\r\ntype PropsType = {\r\n    value: number | null\r\n    minValue: number\r\n    maxValue: number\r\n    error: boolean\r\n    disabled: boolean\r\n}\r\n\r\nexport const Counter: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setIncrement = () => dispatch(setIncrementAC())\r\n    const resetValue = () => dispatch(resetValueAC())\r\n\r\n    const disabledIncBtn = props.value === props.maxValue || props.disabled\r\n    const disabledResetBtn = props.value === props.minValue || props.disabled\r\n\r\n    return (\r\n        <div className={style.counter}>\r\n            <div className={style.monitor}>\r\n                {props.error\r\n                    ? <div className={style.error}>Incorrect value!</div>\r\n                    : props.disabled\r\n                        ? <div className={style.description}>Enter values and press\r\n                            'Set'</div>\r\n                        : <div\r\n                            className={props.value === props.maxValue ? `${style.errorCount} ${style.count}` : style.count}> {props.value}</div>}\r\n            </div>\r\n            <div className={style.button_container}>\r\n                <Button title={'Inc'} onClick={setIncrement} disabled={disabledIncBtn}/>\r\n                <Button title={'Reset'} onClick={resetValue} disabled={disabledResetBtn}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\nimport style from './App.module.css';\nimport {useSelector} from 'react-redux';\nimport {Settings} from './components/Settings/Settings';\nimport {Counter} from './components/Counter/Counter';\nimport {AppRootStateType} from './store/store';\n\n\nconst App = () => {\n\n    const value = useSelector((state: AppRootStateType) => state.count.value)\n    const minValue = useSelector((state: AppRootStateType) => state.count.minValue)\n    const maxValue = useSelector((state: AppRootStateType) => state.count.maxValue)\n    const error = useSelector((state: AppRootStateType) => state.count.error)\n    const disabled = useSelector((state: AppRootStateType) => state.count.disabled)\n\n    return (\n        <div className={style.app}>\n            <Settings value={value}\n                      minValue={minValue}\n                      maxValue={maxValue}\n                      error={error}\n                      disabled={disabled}\n            />\n            <Counter value={value}\n                     minValue={minValue}\n                     maxValue={maxValue}\n                     error={error}\n                     disabled={disabled}\n            />\n        </div>\n    )\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux';\r\nimport countReducer from './count-reducer';\r\nimport {loadState, saveState} from '../utils/localstorage';\r\n\r\nconst reducers = combineReducers({\r\n    count: countReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, loadState())\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        count: store.getState().count\r\n    })\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>","import {AppRootStateType} from \"../store/store\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state: AppRootStateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}